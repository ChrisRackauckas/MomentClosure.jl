var documenterSearchIndex = {"docs":
[{"location":"tutorials/P53_system_example/#P53-system","page":"P53 system","title":"P53 system","text":"","category":"section"},{"location":"theory/moment_expansion/#moment_expansion","page":"Moment Expansion","title":"Moment Expansion","text":"","category":"section"},{"location":"theory/moment_expansion/#The-Chemical-Master-Equation","page":"Moment Expansion","title":"The Chemical Master Equation","text":"","category":"section"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"Consider a chemical reaction network with N different molecular species X_i (i=1 dotsc N) and R chemical reactions, so that the system can be described by [1]:","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign*\r\n    sum_i=1^N s_ij X_i xrightarrowk_j sum_i=1^N r_ij X_i quad j=1dotscR\r\nendalign*","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"where s_ij and r_ij respectively denote the numbers of reactant and product molecules of species i in the chemical reaction j. The stoichiometric matrix is defined as S_ij = r_ij - s_ij (the net change in the number of molecules of species X_i when the r^textth reaction occurs). The state of the system is determined by the state vector mathbfn=(n_1 dotsc n_N), where n_i is the number of X_i molecules. The time evolution of the probability distribution of mathbfn is described by the Chemical Master Equation (CME)","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginequation\r\n    fracd P(mathbfn t)dt = sum^R_r=1 Big a_r(mathbfn-S_r)P(mathbfn-S_r t) - a_r(mathbfn) P(mathbfn t) Big tag1\r\nendequation","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"where a_r(mathbfn) is the propensity function of the r^textth reaction and S_r is the r^textth column of the stoichiometric matrix S.","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"Modelling using the CME framework is common in the study of biochemical and gene networks within cells. Although such master equations are rather simple in structure, for most systems there are no known analytical solutions and their stochastic simulations can be very computationally expensive. One possible approach to investigate the system at hand is to approximate the whole probability distribution solution of the CME in terms of its first few moments (e.g. mean and variance).","category":"page"},{"location":"theory/moment_expansion/#raw_moment_eqs","page":"Moment Expansion","title":"Raw Moment Equations","text":"","category":"section"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"From Eq. (1) we can obtain a system of ordinary differential equations (ODEs) governing the time-evolution of the raw moments of the system up to specified order m, given by mu_mathbfi = mu_i_1 dotsc i_N = langle n_1^i_1 dotsm n_N^i_N rangle, where the indices mathbfi=(i_1 dotsc i_N) are restricted such that mathbfi = sum_j=1^N i_j leq m. Note that first order raw moments are simply the means. For example, when N = 3, the mean molecule number of second species in the system is given by mu_2 = mu_0 1 0 = langle n_2 rangle (when N=3). We chose to relax the notation throughout so that the means can be indicated by a single index of the molecular species (used in this section) or by the corresponding unit vector (used in the code).","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"To find the first moment equations, we multiply the CME by n_i and sum over all possible states:","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign*\r\n    sum_mathbfn n_i fracdP(mathbfnt)dt = sum_n_1^infty sum_n_2^infty dotsm sum_n_N^infty n_i fracdP(mathbfnt)dt \r\n    = sum_r sum_mathbfn n_i a_r(mathbfn-S_r)P(mathbfn-S_r t) - n_i a_r(mathbfn) P(mathbfn t) \r\nendalign*","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"Applying a transformation mathbfn-S_r rightarrow mathbfn on the first term in the sum leads to","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign*\r\n    fracdmu_idt = sum_r sum_mathbfn (n_i+S_ir) a_r(mathbfn)P(mathbfn t) - n_i a_r(mathbfn) P(mathbfn t) \r\n    = sum_r sum_mathbfn S_ir a_r(mathbfn) P(mathbfn t) \r\n    = sum_r S_ir langle a_r(mathbfn) rangle tag2\r\nendalign*","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"The derivation can be extended to the multivariate case of higher order moments mu_mathbfi of arbitrary order m:","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign*\r\n    fracmu_mathbfidt = sum_mathbfn n_1^i_1dotsm n_N^i_N fracdP(mathbfn t)dt \r\n    = sum_r sum_mathbfn left (n_1+S_1r)^i_1dotsm (n_N +S_2r)^i_N - n_1^i_1dotsm n_N^i_N right a_r(mathbfn)P(mathbfn t) \r\n    = sum_r sum_mathbfn left sum^i_1_j_1=0 binomi_1j_1 n_1^j_1S_1r^i_1-j_1 dotsm sum^i_N_j_N=0 binomi_Nj_N n_N^j_NS_Nr^ i_N-j_N - n_1^i_1dotsm n_N^i_N right a_r(mathbfn)P(mathbfn t) \r\n    = sum_r sum_mathbfn sum^mathbfi-1_mathbfj=0 binomi_1j_1 dotsm binomi_Nj_N S_1r^i_1-j_1 dotsm S_Nr^ i_N-j_N n_1^j_1 dotsm n_N^j_N a_r(mathbfn)P(mathbfn t) \r\n    = sum_r sum^mathbfi-1_mathbfj=0 binom mathbfi  mathbfj  S_r^mathbfi-mathbfj langle mathbfn^mathbfj a_r(mathbfn) rangle \r\nendalign*","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"where we have introduced multi-index notation:","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign\r\n    mathbfi = sum^N_j=1 i_j  tag3 \r\n     sum^mathbfi-1_mathbfj=0 = sum_substack0 leq j_1 leq i_1  dotsc  0 leq j_N leq i_N 0 leq j_1+dotsb+j_N leq mathbfi-1 tag4 \r\n    binom mathbfi  mathbfj  = binomi_1j_1 dotsm binomi_Nj_N tag5 \r\n    mathbfn^mathbfj = n_1^j_1dotsm n_N^j_N tag6 \r\n    S_r^mathbfi-mathbfj = S_1r^ i_1-j_1 dotsm S_Nr^ i_N-j_N tag7\r\nendalign","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"It is crucial to stress three key points:","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"Throughout all derivations presented in this section we assume that the components of the net stoichiometry matrix S are constant values. However, in certain cases the reaction product may itself be a stochastic variable so that the corresponding expectation values, langle S_r^mathbfi-mathbfj rangle, must be taken into account. We have implemented a limited support for such systems where components of S can be independent geometrically distributed variables, see the specific gene network example.\nGeneration of raw moment equations is only possible if the kinetics of the system at hand are governed by the law of mass action where all propensity functions are polynomials in mathbfn, otherwise the expectation value terms langle a_r(mathbfn) rangle and langle n_i_1^j_1 dotsm n_i_N^j_N a_r(mathbfn) rangle are ill-defined. This key issue can be overcome by the general central moment expansion method presented below.\nThe order of the polynomials a_r(mathbfn) determines the order of moments encountered in the generated system of ODEs. If the system is linear (contains only zeroth and first order reactions), the m^textth order moments will depend only of moments of order m or lower, hence constituting a finite hierarchy of moment ODEs that can be readily solved numerically or otherwise without approximations. However, if the system is non-linear (involves second or higher order reactions), moment equations will depend on higher order moments. For example, if the reaction network contains bimolecular reactions, the corresponding propensity functions will be second order polynomials and hence m^textth order moment equations will now depend on (m+1)^th order moments. This leads to an infinite hierarchy of coupled moment equations where each moment will depend on higher order moments—it cannot be solved directly and needs to be truncated. This can be achieved using one of many moment closure approximations that express (m+1)^textth order moments in terms of m^textth and lower order moments using different distributional assumptions, effectively closing the hierarchy and enabling one to solve the moment equations up to m^textth order [1]. Details of all closure methods currently implemented within the package can be found in the next Theory section.","category":"page"},{"location":"theory/moment_expansion/#central_moment_eqs","page":"Moment Expansion","title":"Central Moment Equations","text":"","category":"section"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"As we have seen, the moment equations of P(mathbfn t) can be obtained in a straightforward manner if the kinetics of the system are governed by the law of mass action where all propensity functions are polynomials in mathbfn [1]. Similarly, given all propensities are rational functions, a polynomial form can also be recovered [2]. However, problems arise when the propensities take more complicated non-polynomial functions. This can nevertheless be overcome by considering a more general method of moment expansion that enables us to obtain mean and central moment equations up to arbitrary order for virtually any chemical reaction network with any type of smooth (infinitely differentiable) propensity functions. Such framework was first independently formulated by Lee [3] and Ale et al. [4]—our derivation below closely follows these works.","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"We start by Taylor-expanding the propensity functions around the mean mathbfμ = langle mathbfn rangle = (mu_1 dotsc mu_N). This allows us to consider any general propensity function under the assumption that it is infinitely differentiable (smooth). The expansion leads to","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign*\r\n    a_r(mathbfn) = a_r(mathbfμ) + sum_j_1^N fracpartial a_r(mathbfμ)partial n_j_1(n_j_1-mu_j_1) \r\n    + frac12sum_j_1 j_2 fracpartial^2 a_r(mathbfμ)partial n_j_1 partial n_j_2 (n_j_1-mu_j_1) (n_j_2-mu_j_2) + dotsb \r\n     + frac1q sum_j_1 j_2 dotsc j_q fracpartial^q a_r(mathbfμ)partial n_j_1 partial n_j_2dotsmpartial n_j_q (n_j_1-mu_j_1) (n_j_2-mu_j_2) dotsm(n_j_q - mu_j_q) + dotsb \r\n    = sum_mathbfj=0^q frac1mathbfj D^mathbfj a_r(mathbfμ) (mathbfn - mathbfμ)^mathbfj + dotsb \r\nendalign*","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"where q controls the expansion order and we have simplified the expression by using Eqs. (3-7) in addition to:","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign*\r\nmathbfj = j_1dotsm j_N \r\nD^mathbfj f = fracpartial^mathbfjpartial n_1^j_1 dotsm partial n_N^j_N f \r\nendalign*","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"Now we can obtain equations governing the time-evolution of the means μ_i and the central moments of arbitrary order m, M_mathbfi = M_i_1 dotsc i_N = langle (n_1 - mu_1)^i_1dotsm(n_N - mu_N)^i_N rangle, where again mathbfi = m. We first consider the equations for the means immediately starting from Eq. (2):","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign*\r\n    fracdmu_idt = sum_r S_ir langle a_r(mathbfn) rangle \r\n    = sum_r S_ir Big( sum_mathbfj=0^q frac1mathbfj D^ mathbfj a_r(mathbfμ) langle (mathbfn - mathbfμ)^mathbfj rangle + dotsb Big) \r\n    = sum_r S_ir Big( sum_mathbfj=0^q frac1mathbfj D^ mathbfj a_r(mathbfμ) M_mathbfj + dotsb Big) \r\nendalign*","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"We can now derive the equations for central moments by taking the time derivative of M_mathbfi and using Eq. (1):","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign*\r\n    fracdM_mathbfidt = sum_mathbfn (n_1 - mu_1)^i_1dotsm(n_N - mu_N)^i_N fracdP(mathbfn t)dt \r\n    - sum_mathbfn sum_j=1^N i_j fracdmu_jdt (n_1-mu_1)^i_1 dotsm(n_j-mu_j)^i_j-1dotsm(n_N-mu_N)^i_NP(mathbfn t) \r\n    = sum_r sum_mathbfn Big (n_1 - mu_1 + S_1r)^i_1 dotsm (n_N-mu_N+S_Nr)^i_N \r\n    - (n_1-mu_1)^i_1dotsm(n_N-mu_N)^i_N Biga_r(mathbfn)P(mathbfn t) - sum_j i_j fracdmu_jdtM_i_1dotsci_j-1dotsc i_N \r\n    = sum_r sum_mathbfn Bigg sum_mathbfj=0^mathbfi-1 binomi_1j_1 dotsm binomi_Nj_N S_1r^ i_1-j_1 dotsm S_Nr^ i_N-j_N(n_1-mu_1)^j_1dotsm(n_N-mu_N)^j_NBigg \r\n    times Bigg sum_mathbfj=0^q frac1mathbfj D^mathbfj a_r(mathbfμ) (mathbfn - mathbfμ)^mathbfj + dotsb Bigg-sum_j i_j fracdmu_jdt M_mathbfi_j- \r\n    = sum_r sum_mathbfj=0^mathbfi-1 Bigg binomi_1j_1 dotsm binomi_Nj_N S_1r^ i_1-j_1 dotsm S_Nr^ i_N-j_N sum_mathbfk=0^q-mathbfj frac1mathbfkD^mathbfk a_r(mathbfμ) M_mathbfj+mathbfk + dotsb Bigg   - sum_j i_j fracdmu_jdt M_mathbfi_j- \r\n    = sum_r sum_mathbfj=0^mathbfi-1 Bigg binommathbfimathbfj S_r^mathbfi-mathbfj sum_mathbfk=0^q-mathbfj frac1mathbfkD^mathbfk a_r(mathbfμ) M_mathbfj+mathbfk + dotsb Bigg - sum_j i_j fracdmu_jdt M_mathbfi_j- \r\nendalign*","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"where we have also defined","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"beginalign*\r\n    M_mathbfi_j-=M_i_1dotsci_j-1dotsc i_N \r\n    M_mathbfj+mathbfk = M_j_1+k_1dotscj_N+k_N \r\nendalign*","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"Although raw moment equations for non-linear mass-action systems already require approximate treatment using moment closure, here we have an additional complication: if a system contains non-polynomial propensity functions, the equations for both means and central moments will in principle depend on an infinite number of higher order central moments. Hence the expansion order q is of utmost importance as it controls the degree of approximation: the Taylor expansion of propensity functions is performed up to q^textth order so that m^textth central moment equations will depend on central moments of order qm and lower. Finally, moment closure approximations can be applied similarly as in the case of raw moment equations.","category":"page"},{"location":"theory/moment_expansion/#References","page":"Moment Expansion","title":"References","text":"","category":"section"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"[1]: D. Schnoerr, G. Sanguinetti, and R. Grima, \"Approximation and inference methods for stochastic biochemical kinetics - a tutorial review\", Journal of Physics A: Mathematical and Theoretical 50, 093001 (2017). https://doi.org/10.1088/1751-8121/aa54d9","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"[2]: P. Milner, C. S. Gillespie, and D. J. Wilkinson, \"Moment closure approximations for stochastic kinetic models with rational rate laws\", Mathematical Biosciences 231, 99-104 (2011). https://doi.org/10.1016/j.mbs.2011.02.006","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"[3]: A. Ale, P. Kirk, and M. P. H. Stumpf, \"A general moment expansion method for stochastic kinetic models\", The Journal of Chemical Physics 138, 174101 (2013). https://doi.org/10.1063/1.4802475","category":"page"},{"location":"theory/moment_expansion/","page":"Moment Expansion","title":"Moment Expansion","text":"[4]: C. H. Lee, \"A Moment Closure Method for Stochastic Chemical Reaction Networks with General Kinetics\", MATCH Communications in Mathematical and in Computer Chemistry 70, 785-800 (2013). https://match.pmf.kg.ac.rs/electronicversions/Match70/n3/match70n3785-800.pdf","category":"page"},{"location":"theory/moment_closure_approximations/#moment_closure_approximations","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"","category":"section"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"In the previous section, we have shown that for a non-linear system an infinite hierarchy of coupled moment equations is obtained that cannot be solved directly and therefore needs to be truncated in an approximate way. This can be achieved using moment closure approximations (MAs) using which all moments above a certain order m are expressed in terms of m^textth and lower order moments using various (usually distributional) assumptions [1]. Doing so enables us to effectively close the moment hierarchy, leading to a finite set of ODEs which can then be solved numerically. In this section, we present some the commonly used MA methods that are implemented in MomentClosure. Please see the Tutorials section for examples showing different MAs applied to a variety of systems.","category":"page"},{"location":"theory/moment_closure_approximations/#Zero-Closure","page":"Moment Closure Approximations","title":"Zero Closure","text":"","category":"section"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"The simplest MA is the \"central-moment-neglect\" MA (CMN-MA) [2], also referred to as \"zero-closure\" [3] or \"low dispersion moment closure\" [4], where CMN-MA at m^textth order means that the moment equations are truncated by setting all central moments above order m to zero. For example, in the simple case of 2nd order truncation, the moment equations for the means mu_i and covariances C_ij become:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    fracd mu_idt = sum_r S_ir Big( a_r(mathbfμ) + frac12sum_i_1 i_2 fracpartial^2  a_r(mathbfμ)partial n_i_1 partial n_i_2 M_i_1 i_2 Big) \r\n    fracdC_ijdt = fracdM_mathbf0_i+ j+dt \r\n    = fracdlangle (n_i-mu_i) (n_j-mu_j) rangledt = \r\n    = sum_r Big S_ir sum_k fracpartial a_r(mathbfμ)partial n_k C_jk + S_jr sum_k fracpartial a_r(mathbfμ)partial n_k C_ik \r\n    + S_irS_jr Big( a_r(mathbfμ) + frac12 sum_k l fracpartial^2 a_r(mathbfμ)partial n_k partial n_l C_kl Big) Big \r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/#normal_closure","page":"Moment Closure Approximations","title":"Normal Closure","text":"","category":"section"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Another popular MA is the \"normal moment-closure\", pioneered by Goodman [5] and Whittle [6], where all cumulants kappa_mathbfi above order m are set to zero, approximating the probability distribution of the system with the normal distribution [2]:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    kappa_mathbfi = 0 quad textfor  mathbfi  m\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"In order to truncate the higher order central or raw moments M_mathbfi using normal closure we express them in terms of cumulants kappa_mathbfi using the multivariate moment and cumulant relationships formalised by Balakrishnan et al. [7].","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Note that a different implementation of normal closure can be found in literature [3], where the higher order central moments are expressed in terms of a sum of product of covariances using Isserlis' theorem. However, one could argue that such formulation is not advisable as it assumes stronger \"Gaussianity\" of the underlying distribution than setting the higher order cumulants to zero which is less of an approximation on the form of the distribution and hence is preferable in the development of MAs. For example, in case we are truncating the moment equations at 4th order, the truncation-order central moments would be expressed only in terms of covariances whereas our formulation using cumulants would explicitly include information about the computed values of third central moments, which is expected to improve numerical stability and lead to more accurate moment estimates.","category":"page"},{"location":"theory/moment_closure_approximations/#Poisson-Closure","page":"Moment Closure Approximations","title":"Poisson Closure","text":"","category":"section"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Although the Poisson distribution lacks a general formulation for multiple variables [3], \"Poisson MA\" has been formulated [2, 8] assuming that the joint multivariate distribution is a product of univariate Poisson distributions, i.e., n_i sim textPoisson(mu_i). The cumulants of a univariate Poisson distribution are equal to the mean, hence in Poisson closure we set all higher order diagonal cumulants to the corresponding mean values and mixed cumulants to zero [2], which in our notation can be expressed as:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    kappa_mathbfi = mu_k quad textif  mathbfi  m  textand  i_1dotsci_N = k  textor  0 quad textfor some  k in 1dotscN \r\n    kappa_mathbfi = 0 quad   textif  mathbfi  m  textand  i_k neq i_l quad textfor some  kl in 1dotscN\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Similarly to normal closure, the higher order central/raw moments can be expressed in terms of cumulants as described in [7].","category":"page"},{"location":"theory/moment_closure_approximations/#Log-normal-Closure","page":"Moment Closure Approximations","title":"Log-normal Closure","text":"","category":"section"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"\"Log-normal\" MA, first applied by Keeling [9], allows one to truncate the moment equations under the assumption that the distribution of the underlying stochastic process is log-normal. A positive multi-dimensional random variable mathbfn follows a log-normal distribution if its logarithm is normally distributed, so that mathbfy = ln mathbfn, and mathbfy sim mathcalN(mathbfnu Sigma), where mathbfnu and Sigma denote the vector of means and the covariance matrix respectively. By considering the moment generating function of the normal distribution, mathcalN(mathbfnu Sigma), one can show that the raw moments are given by [3, 10]:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    mu_mathbfi = expleft(mathbfi^topmathbfnu + frac12mathbfi^topSigmamathbfiright)\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"It follows that","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    nu_i = ln mu_i - frac12 Sigma_ii \r\n    Sigma_ij = ln left( 1 + fraclangle (n_i - mu_i)(n_j - mu_j) rangleexp left( nu_i + nu_j + frac12 left( Sigma_ii + Sigma_jj right) right) right)  \r\n    = ln left( 1 + fracC_ijexp left( nu_i + nu_j + frac12 left( Sigma_ii + Sigma_jj right) right) right) \r\n    Sigma_ii = ln left( 1 + fracC_iimu_i^2  right) \r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Note that central moments can be obtained from raw moments by utilising their general multivariate relationship [11].","category":"page"},{"location":"theory/moment_closure_approximations/#Gamma-Closure","page":"Moment Closure Approximations","title":"Gamma Closure","text":"","category":"section"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"The method of \"gamma closure\" was originally implemented by Lakatos et al. [3], where the authors acknowledged the ambiguity arising in defining multivariate gamma distributions, and, building upon previous definitions in the literature (e.g. [12] and [13]), proposed a new formulation of a multivariate gamma distribution. Here we reproduce the definition by closely following the description in [3] and elucidating some of the derivation steps.","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"We denote a random variable drawn from gamma distribution with shape alpha and scale beta as n sim textGamma(alpha beta). The probability density function of the univariate gamma distribution with the corresponding shape-scale parameterisation is","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    f(n alpha beta) = frac1Gamma(alpha)beta^alpha n^alpha-1e^-fracnbeta\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"where Gamma is the gamma function. The i^textth raw moment of n is given by","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    μ_i = fracGamma(alpha+i)beta^iGamma(alpha) = (alpha)_i beta^i taga\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"where (alpha)_i = alpha (alpha+1) dotsm (alpha+i-1). Note that the moment generating function of X is","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    G_n(k) = langle e^kn rangle = left( 1 - beta k right)^-alpha\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"In order to construct a multivariate gamma distribution, we start by considering independent gamma variables Y_kl, k l = 1 dotsc N, with shape and scale parameters alpha_kl and beta_kl respectively. Here we define Y_kl to be symmetric in indices, i.e., Y_kl = Y_lk. Now consider an N-dimensional random vector mathbfn = left( n_1 n_2 dotsc n_N right), where n_i is a linear combination of independent gamma variables:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    n_i = sum_j=1^N fracbeta_iibeta_ij Y_ij\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"The i^textth marginal moment generating function of the joint distribution of mathbfn is given by:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    G_n_i(k_i) = leftlangle e^k_i sum_j=1^N fracbeta_iibeta_ij rightrangle  \r\n                 = G_Y_i1left(k_i fracbeta_iibeta_i1 right) G_Y_i2left(k_i fracbeta_iibeta_i2 right) dotsm G_Y_iNleft(k_i fracbeta_iibeta_iN right)  \r\n                 = left(1-beta_ii k_i right)^sum_j=1^N alpha_ij\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"so that n_i sim textGamma(alpha_i beta_i), where alpha_i = sum_j=1^N alpha_ij and beta_i = beta_ii. Therefore, we have obtained an N-variate gamma distribution, which can be denoted as mathbfn sim MG(mathbfalpha mathbfbeta), where the vectors of shape and scale parameters are given by mathbfalpha = left( alpha_1 dotsc alpha_N right) and mathbfbeta = left( beta_1 beta_2 dotsc beta_N right) respectively.","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"We can now readily obtain the raw m^textth order moment of n_i:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    langle n_i^m rangle = leftlangle left( sum_j=1^N fracbeta_iibeta_ij Y_ij right)^m rightrangle  \r\n                            = leftlangle sum_k_1+k_2+dotsb+k_N = m fracmk_1k_2 dotsm k_N prod_j=1^N left( fracbeta_iibeta_ij Y_ij right)^k_j rightrangle  \r\n                            = sum_mathbfk=m fracmmathbfk prod_j=1^N leftlangle left( fracbeta_iibeta_ij Y_ij right)^k_j rightrangle  \r\n                            = beta_i^m sum_mathbfk=m fracmmathbfk left(\r\n                            prod_j=1^N left( alpha_ij right)_k_j right)\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Note that we have used Eq. (a) to get to the last line. The mixed raw moments are computed in a similar fashion:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    mu_mathbfi = leftlangle left( sum_j=1^N fracbeta_11beta_1jY_1j right)^i_1 dotsm left( sum_j=1^N fracbeta_NNbeta_NjY_Nj right)^i_N rightrangle  \r\n                = mathbfbeta^mathbfi leftlangle sum_mathbfk_1=i_1 dotsm sum_mathbfk_N=i_N fracmathbfimathbfk_1dotsmmathbfk_N prod_j=1^N left(  fracY_1jbeta_1j right)^k_1_j dotsm prod_j=1^N left(  fracY_Njbeta_Nj right)^k_N_j rightrangle  \r\n                = mathbfbeta^mathbfi leftlangle sum_mathbfk_1=i_1 dotsm sum_mathbfk_N=i_N fracmathbfimathbfk_1dotsmmathbfk_N prod_q=1^N left( fracY_qqbeta_qq right)^k_q_q prod_r=q+1^N left( fracY_qrbeta_qr right)^k_q_r + k_r_q rightrangle  \r\n                 = mathbfbeta^mathbfi sum_mathbfk_1=i_1 dotsm sum_mathbfk_N=i_N fracmathbfimathbfk_1dotsmmathbfk_N prod_q=1^N left( alpha_qq right)_k_q_q prod_r=q+1^N left( alpha_qr right)_k_q_r + k_r_q\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"where we have taken into account the symmetry in indices and defined each mathbfk_i as an N-dimensional vector mathbfk_i = left( k_i_1 dotsc k_i_N right) and mathbfbeta^mathbfi = beta_1^i_1 dotsm beta_N^i_N. Note that the mean and variance of n_i can be obtained from:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    mu_i  = sum_j=1^N alpha_ij beta_i tagb \r\n    C_ii = (alpha_i)_2 beta_i^2 - alpha_i^2beta_i^2  \r\n           = sum_j=1^N alpha_ij beta_i^2\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Similarly, from Eq. (a) it follows that","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    langle n_i n_j rangle = beta_i beta_j left( sum_substackk l  (k l) neq (j i)^N  alpha_ik alpha_jl + (alpha_ij)_2 right)\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"which together with Eq. (b) allows us to express the covariance as:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    C_ij = langle n_i n_j rangle - beta_i beta_j left( sum_kl alpha_ik alpha_jl right)  \r\n           = alpha_ij beta_i beta_j\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Finally, from the equations above we can obtain all shape and scale parameters:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    beta_i = fracC_iimu_i \r\n    alpha_ij = fracC_ijbeta_i beta_j \r\n    alpha_ii = fracmu_ibeta_i - sum_substackk  k neq i alpha_ik\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/#Derivative-Matching","page":"Moment Closure Approximations","title":"Derivative Matching","text":"","category":"section"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"The derivative matching MA [14, 15] is based on expressing moments above order m in terms of lower order moments in such a way that their time derivatives match those of the exact moments at some initial time and initial conditions. We outline the approach below, closely following the complete exposition found in the original papers of Singh and Hespanha [14, 15].","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"The raw moment equations up to order m for any mass-action reaction network containing at most bimolecular (second order) reactions can be written down concisely in the matrix form:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    fracdmathbfμdt = hatmathbfa + Amathbfμ + B barmathbfμ \r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"where mathbfμ is a vector containing all raw moments of the system up to order m and barmathbfμ consists of all (m+1)^textth order raw moments which the equations depend on. The constant vector hatmathbfa and constant matrices A and B are chosen appropriately for the system at hand. In this case, an MA can be defined as a procedure where each moment in barmathbfμ, barμ_mathbfi, is approximated by a moment closure function varphi_mathbfi (mathbfμ) of moments up to order m. Then the moment equations can be rewritten as","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"    fracdmathbfνdt = hatmathbfa + Amathbfν + Bbarmathbfφ(mathbfν) ","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"where the state of the system is now denoted by mathbfν instead of mathbfμ, stressing the fact that we are considering the approximation of the true moment dynamics, and barmathbfφ(mathbfν) is the corresponding vector of moment closure functions.","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"The idea behind derivative matching is to determine a map barmathbfφ so that the time derivatives between the exact moments, mathbfμ(t), and the approximate moments, mathbfν(t), would match at some initial time t_0 under the initial condition mathbfμ(t_0) = mathbfν(t_0):","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    left fracd^i mathbfμdt rightrvert_t=t_0 = left fracd^i mathbfνdt rightrvert_t=t_0\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"If these conditions hold, one can expect from a Taylor series approximation argument that mathbfμ(t) and mathbfν(t) will stay close at least locally in time and hence the MA will be sufficiently accurate.","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"In order to move forward, Singh and Hespanha present what can be understood as essentially an ansatz. Firstly, moment closure functions for each mathbfi, where mathbfi  m, are chosen to have a separable form given by","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    φ_mathbfi(mathbfμ) = prod_substack1 leq j_1+dotsb+j_N leq m left( μ_mathbfj right)^γ_mathbfj = prod_mathbfj=1^m left( μ_mathbfj right)^γ_mathbfj \r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"where γ_mathbfj are constants (unique for each vector mathbfi) that can be determined by solving the following linear equation system:","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    C^mathbfi_mathbfj = sum_mathbfk=1^m gamma_mathbfk C^mathbfk_mathbfj  quad textfor each  mathbfj  textwhere  mathbfjleq m \r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"were we have introduced multi-index scalars","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    C^mathbfu_mathbfv = C^u_1_v_1C^u_2_v_2 dotsm C^u_N_v_N\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"with each element defined as","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\nC^a_b =\r\nbegincases\r\n  fraca(a-b)b  a geq b \r\n  0  a lt b\r\nendcases\r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Using the specific construction of barmathbfφ described above, it can be shown [15] that for every deterministic initial condition, i.e., mathbfn(t_0) = mathbfn_0 with probability one, we will have","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"beginalign*\r\n    mathbfμ(t_0) = mathbfν(t_0) implies left fracd mathbfμdt rightrvert_t=t_0 = left fracd mathbfνdt rightrvert_t=t_0 \r\n    implies left fracd^2mathbfμdt^2 rightrvert_t=t_0 = left fracd^2 mathbfνdt^2 rightrvert_t=t_0 + mathbfϵ(mathbfn_0) \r\nendalign*","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"where all elements of mathbfϵ(mathbfn_0) are zero except the ones corresponding to m^textth order raw moments—these elements are second order polynomials in mathbfn_0. Note, however, that these results hold only for mass-action systems containing no higher than second order chemical reactions. While the derivative matching MA can be applied in the same way to systems containing higher order polynomial and non-polynomial propensity functions, it has not been rigorously analysed in such scenarios, where, naturally, we expect significantly larger approximation errors.","category":"page"},{"location":"theory/moment_closure_approximations/#Conditional-Closures","page":"Moment Closure Approximations","title":"Conditional Closures","text":"","category":"section"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"Discussion of [16].","category":"page"},{"location":"theory/moment_closure_approximations/#Conditional-Normal-Closure","page":"Moment Closure Approximations","title":"Conditional Normal Closure","text":"","category":"section"},{"location":"theory/moment_closure_approximations/#Conditional-Derivative-Matching","page":"Moment Closure Approximations","title":"Conditional Derivative Matching","text":"","category":"section"},{"location":"theory/moment_closure_approximations/#References","page":"Moment Closure Approximations","title":"References","text":"","category":"section"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[1]: D. Schnoerr, G. Sanguinetti, and R. Grima, \"Approximation and inference methods for stochastic biochemical kinetics - a tutorial review\", Journal of Physics A: Mathematical and Theoretical 50, 093001 (2017). https://doi.org/10.1088/1751-8121/aa54d9","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[2]: D. Schnoerr, G. Sanguinetti, and R. Grima, \"Comparison of different moment-closure approximations for stochastic chemical kinetics\", The Journal of Chemical Physics 143, 185101 (2015). https://doi.org/10.1063/1.4934990","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[3]: E. Lakatos, A. Ale, P. D. W. Kirk, and M. P. H. Stumpf, \"Multivariate moment closure techniques for stochastic kinetic models\", The Journal of Chemical Physics 143, 094107 (2015). https://doi.org/10.1063/1.4929837","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[4]: J.  Hespanha,  \"Moment  closure  for  biochemical  networks\",  in  2008  3rd  International Symposium on Communications, Control and Signal Processing (Mar. 2008), pp. 142–147. https://doi.org/10.1109/ISCCSP.2008.4537208","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[5]: L. A. Goodman, \"Population Growth of the Sexes\", Biometrics 9, Publisher: [Wiley, International Biometric Society], 212–225 (1953). https://doi.org/10.2307/3001852","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[6]: P. Whittle, \"On the use of the normal approximation in the treatment of stochastic processes\", Journal of the Royal Statistical Society: Series B (Methodological) 19, 268–281 (1957). https://doi.org/10.1111/j.2517-6161.1957.tb00263.x","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[7]: N. Balakrishnan, N. L. Johnson, and S. Kotz, “A note on relationships between moments, central moments and cumulants from multivariate distributions”, Statistics & Probability Letters 39, 49–54 (1998). https://doi.org/10.1016/S0167-7152(98)00027-3","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[8]: I. Nasell, \"An extension of the moment closure method\", Theoretical Population Biology 64, 233–239 (2003). https://doi.org/10.1016/S0040-5809(03)00074-1","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[9]: M. J. Keeling, \"Multiplicative Moments and Measures of Persistence in Ecology\", Journal of Theoretical Biology 205, 269–281 (2000). https://doi.org/10.1006/jtbi.2000.2066","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[10]: E. L. Crow and K. Shimizu, eds., Lognormal Distributions: Theory and Applications (Marcel Dekker, 1988).","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[11]: N. L. Johnson, S. Kotz, and N. Balakrishnan, Discrete Multivariate Distributions (Wiley, Feb. 1997).","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[12]: A. M. Mathal and P. G. Moschopoulos, \"A form of multivariate gamma distribution\", Annals of the Institute of Statistical Mathematics 44, 97–106 (1992). https://doi.org/10.1007/BF00048672","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[13]: E. Furman, \"On a multivariate gamma distribution\", Statistics & Probability Letters 78, 2353–2360 (2008). https://doi.org/10.1016/j.spl.2008.02.012","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[14]: A.  Singh  and  J.  P.  Hespanha,  \"Lognormal  Moment  Closures  for  Biochemical  Reactions\", in Proceedings of the 45th IEEE Conference on Decision and Control, ISSN:0191-2216 (Dec. 2006), pp. 2063–2068. https://doi.org/10.1109/CDC.2006.376994","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[15]: A. Singh and J. P. Hespanha, \"Approximate Moment Dynamics for Chemically Reacting Systems\", IEEE Transactions on Automatic Control 56, 414–418 (2011). https://doi.org/10.1109/TAC.2010.2088631","category":"page"},{"location":"theory/moment_closure_approximations/","page":"Moment Closure Approximations","title":"Moment Closure Approximations","text":"[16]: M. Soltani, C. A. Vargas-Garcia, and A. Singh, \"Conditional Moment Closure Schemes for Studying Stochastic Dynamics of Genetic Circuits\", IEEE Transactions on Biomedical Circuits and Systems 9, 518–526 (2015). https://doi.org/10.1109/tbcas.2015.2453158","category":"page"},{"location":"tutorials/gene_network_example/#gene_network_example","page":"Gene network","title":"Gene network","text":"","category":"section"},{"location":"tutorials/using_momentclosure/#main_tutorial","page":"Using MomentClosure","title":"Using MomentClosure","text":"","category":"section"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"This tutorial is an introduction to using MomentClosure to define chemical reaction network models, generate the corresponding moment equations, apply moment closure approximations and finally solve the resulting system of ODEs. To demonstrate this functionality, we will consider a specific case of an oscillatory chemical system known as the Brusselator, characterised by the reactions","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"beginalign*\r\n2X + Y stackrelc_1rightarrow 3X \r\nX stackrelc_2rightarrow Y \r\n undersetc_4stackrelc_3rightleftharpoons X\r\nendalign*","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"The terminology and the notation used throughout is consistent with the Theory section of the docs and we advise giving it a skim through.","category":"page"},{"location":"tutorials/using_momentclosure/#Model-Initialisation","page":"Using MomentClosure","title":"Model Initialisation","text":"","category":"section"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Catalyst.jl provides a comprehensive interface to modelling chemical reaction networks in Julia and can be used to construct models fully-compatible with MomentClosure. For more details on how to do so we recommend reading Catalyst's tutorial. This way, the Brusselator can be defined as:","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"using Catalyst\r\nrn = @reaction_network begin\r\n  (c₁/Ω^2), 2X + Y → 3X\r\n  (c₂), X → Y\r\n  (c₃*Ω, c₄), 0 ↔ X\r\nend c₁ c₂ c₃ c₄ Ω","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"The returned rn is an instance of ModelingToolkit.ReactionSystem. Note that we have also included the system-size parameter Omega which will be of interest later on looking at the system's dynamics.","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Alternatively, models can be defined as a MomentClosure's built-in ReactionSystemMod by considering the net stoichiometry matrix, S, and a vector of the corresponding reaction propensity functions, mathbfa. As in Catalyst, the model specification is based on the rich symbolic-numeric modelling framework provided by ModelingToolkit.jl (TODO: change this to Symbolics.jl?). Note that we have to explicitly define the molecule numbers of each chemical species as ModelingToolkit.@variables and reaction constants as ModelingToolkit.@parameters. The time, t, must also be initialised as a ModelingToolkit.parameter and used to indicate the time-dependence of species' variables. The reaction network can then be constructed as follows:","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"using MomentClosure\r\n@parameters t, c₁, c₂, c₃, c₄, Ω\r\n@variables X(t), Y(t)\r\n\r\n# stoichiometric matrix\r\nS_mat = [ 1 -1  1 -1;\r\n         -1  1  0  0]\r\n\r\n# propensity functions\r\na = [c₁*X*Y*(X-1)/Ω^2, c₂*X, c₃*Ω, c₄*X]\r\n\r\nrn2 = ReactionSystemMod(t, [X, Y], [c₁, c₂, c₃, c₄, Ω], a, S_mat)","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"We stress that ReactionSystemMod, as the name suggests, is a rather trivial extension/modification of ModelingToolkit.ReactionSystem. The main motivation behind it is to add support for systems that include reactions whose products are independent geometrically distributed random variables (currently unsupported by Catalyst), see the auto-regulatory gene network example for more details. Although ReactionSystemMod provides the same basic functions to access network properties as does Catalyst for a ModelingToolkit.ReactionSystem (see the API), its functionality is nowhere near as rich. For example, ReactionSystemMod cannot be used directly for deterministic or stochastic simulations using DifferentialEquations.jl. Therefore, we advise using Catalyst for model initialisation whenever possible.","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Note that the net stoichiometry matrix and an array of the corresponding propensities, if needed, can be extracted from a ModelingToolkit.ReactionSystem using functions get_S_mat and propensities respectively.","category":"page"},{"location":"tutorials/using_momentclosure/#Generating-Moment-Equations","page":"Using MomentClosure","title":"Generating Moment Equations","text":"","category":"section"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Having defined the Brusselator model, we can proceed to obtain the moment equations. The system follows the law of mass action, i.e., all propensity functions are polynomials in molecule numbers X(t) and Y(t), and so we can generate either raw or central moment equations, as described in the Theory section on moment expansion.","category":"page"},{"location":"tutorials/using_momentclosure/#Raw-Moment-Equations","page":"Using MomentClosure","title":"Raw Moment Equations","text":"","category":"section"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Let's start with the raw moment equations which we choose to generate up to second order (m=2):","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"using MomentClosure\r\nraw_eqs = generate_raw_moment_eqs(rn, 2, combinatoric_ratelaw=false)","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Note that we have set combinatoric_ratelaw=false in order to ignore the factorial scaling factors which Catalyst adds to mass-action reactions. The function generate_raw_moment_eqs returns an instance of RawMomentEquations that contains (in addition to a number of utility parameters) a ModelingToolkit.ODESystem composed of all the moment equations which can be accessed with raw_eqs.odes.","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"We can use Latexify to look at the generated ODESystem directly with using Latexify; latexify(raw_eqs.odes). However, we include an additional function format_moment_eqs which in many cases leads to cleaner symbolic expressions and can be used as:","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"using Latexify\r\nexprs = format_moment_eqs(raw_eqs.odes)\r\nlatexify(exprs, cdot=false, env=:align)","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"beginalign*\r\nfracdmu_10dt = c_3 Omega + c_1 mu_21 Omega^-2 - c_2 mu_10 - c_4 mu_10 - c_1 mu_11 Omega^-2 \r\nfracdmu_01dt = c_2 mu_10 + c_1 mu_11 Omega^-2 - c_1 mu_21 Omega^-2 \r\nfracdmu_20dt = c_2 mu_10 + c_3 Omega + c_4 mu_10 + 2 c_1 mu_31 Omega^-2 + 2 c_3 Omega mu_10 - 2 c_2 mu_20 - 2 c_4 mu_20 - c_1 mu_11 Omega^-2 - c_1 mu_21 Omega^-2 \r\nfracdmu_11dt = c_2 mu_20 + c_1 mu_11 Omega^-2 + c_1 mu_22 Omega^-2 + c_3 Omega mu_01 - c_2 mu_10 - c_2 mu_11 - c_4 mu_11 - c_1 mu_12 Omega^-2 - c_1 mu_31 Omega^-2 \r\nfracdmu_02dt = c_2 mu_10 + c_1 mu_21 Omega^-2 + 2 c_2 mu_11 + 2 c_1 mu_12 Omega^-2 - c_1 mu_11 Omega^-2 - 2 c_1 mu_22 Omega^-2\r\nendalign*","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"The raw moments are defined as","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"mu_ij(t) = langle X(t)^i Y(t)^j rangle","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"where langle rangle denote the expectation value and we have explicitly included the time-dependence for completeness (made implicit in the formatted moment equations). Note that the ordering of species (X first and Y second) is consistent with the order these variables appear within the Catalyst.@reaction_network macro. The ordering can also be checked using Catalyst.speciesmap function:","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"speciesmap(rn)","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Dict{Term{Real},Int64} with 2 entries:\r\n  X(t) => 1\r\n  Y(t) => 2","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Note that speciesmap can be used in the same way with a ReactionSystemMod.","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Coming back to the generated moment equations, we observe that they depend on higher-order moments. For example, the ODE for mu_02 depends on third order moments μ_12 and μ_21 and the fourth order moment mu_22. Consider the general case of raw moment equations: if a network involves reactions that are polynomials (in molecule numbers) of at most order k, then its m^textth order moment equations will depend on moments up to order m+k-1. Hence the relationship seen above is expected as the Brusselator involves a trimolecular reaction whose corresponding propensity function is a third order polynomial in X(t) and Y(t). The number denoting the highest order of moments encountered in the generated RawMomentEquations can also be accessed as raw_eqs.q_order (returning 4 in this case).","category":"page"},{"location":"tutorials/using_momentclosure/#Central-Moment-Equations","page":"Using MomentClosure","title":"Central Moment Equations","text":"","category":"section"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"The corresponding central moment equations can also be easily generated:","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"central_eqs = generate_central_moment_eqs(rn, 2, combinatoric_ratelaw=false)","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Note that in case of non-polynomial propensity functions the expansion order q must also be specified, see the P53 system example for more details. Luckily, the Brusselator contains only mass-action reactions and hence q is automatically determined by the highest order (polynomial) propensity. The function generate_central_moment_eqs returns an instance of CentralMomentEquations. Similarly as before, using central_eqs.odes we can access and visualise the ODESystem containing all central moment equations:","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"exprs = format_moment_eqs(central_eqs.odes)\r\nlatexify(exprs, cdot=false, env=:align)","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"beginalign*\r\nfracdmu_10dt = c_3 Omega + c_1 M_21 Omega^-2 + c_1 M_20 mu_01 Omega^-2 + c_1 mu_01 Omega^-2 mu_10^2 + 2 c_1 M_11 mu_10 Omega^-2 - c_2 mu_10 - c_4 mu_10 - c_1 M_11 Omega^-2 - c_1 mu_01 mu_10 Omega^-2 \r\nfracdmu_01dt = c_2 mu_10 + c_1 M_11 Omega^-2 + c_1 mu_01 mu_10 Omega^-2 - c_1 M_21 Omega^-2 - 2 c_1 M_11 mu_10 Omega^-2 - c_1 M_20 mu_01 Omega^-2 - c_1 mu_01 Omega^-2 mu_10^2 \r\nfracdM_20dt = c_2 mu_10 + c_3 Omega + c_4 mu_10 + 2 c_1 M_31 Omega^-2 + c_1 mu_01 Omega^-2 mu_10^2 + 2 c_1 M_11 Omega^-2 mu_10^2 + 4 c_1 M_21 mu_10 Omega^-2 + 2 c_1 M_30 mu_01 Omega^-2 + 4 c_1 M_20 mu_01 mu_10 Omega^-2 - 2 c_2 M_20 - 2 c_4 M_20 - c_1 M_11 Omega^-2 - c_1 M_21 Omega^-2 - c_1 M_20 mu_01 Omega^-2 - c_1 mu_01 mu_10 Omega^-2 \r\nfracdM_11dt = c_2 M_20 + c_1 M_11 Omega^-2 + c_1 M_22 Omega^-2 + c_1 M_02 Omega^-2 mu_10^2 + c_1 M_21 mu_01 Omega^-2 + c_1 mu_01 mu_10 Omega^-2 + 2 c_1 M_12 mu_10 Omega^-2 + 2 c_1 M_11 mu_01 mu_10 Omega^-2 - c_2 M_11 - c_2 mu_10 - c_4 M_11 - c_1 M_12 Omega^-2 - c_1 M_31 Omega^-2 - c_1 M_02 mu_10 Omega^-2 - c_1 M_11 mu_01 Omega^-2 - c_1 M_11 mu_10 Omega^-2 - c_1 M_11 Omega^-2 mu_10^2 - 2 c_1 M_21 mu_10 Omega^-2 - c_1 M_30 mu_01 Omega^-2 - c_1 mu_01 Omega^-2 mu_10^2 - 2 c_1 M_20 mu_01 mu_10 Omega^-2 \r\nfracdM_02dt = c_2 mu_10 + c_1 M_21 Omega^-2 + 2 c_2 M_11 + 2 c_1 M_12 Omega^-2 + c_1 M_20 mu_01 Omega^-2 + c_1 mu_01 Omega^-2 mu_10^2 + 2 c_1 M_02 mu_10 Omega^-2 + 2 c_1 M_11 mu_01 Omega^-2 + 2 c_1 M_11 mu_10 Omega^-2 - c_1 M_11 Omega^-2 - 2 c_1 M_22 Omega^-2 - 2 c_1 M_02 Omega^-2 mu_10^2 - 4 c_1 M_12 mu_10 Omega^-2 - 2 c_1 M_21 mu_01 Omega^-2 - c_1 mu_01 mu_10 Omega^-2 - 4 c_1 M_11 mu_01 mu_10 Omega^-2\r\nendalign*","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Unfortunately, central moment equations often take a visually painful form. Note that the first two ODEs, as before, indicate the means, and the central moments are denoted as","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"M_ij(t) = langle (X(t)-mu_10(t))^i (Y(t)-mu_01(t))^j rangle","category":"page"},{"location":"tutorials/using_momentclosure/#Applying-Moment-Closure","page":"Using MomentClosure","title":"Applying Moment Closure","text":"","category":"section"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"As observed above, the moment equations of the Brusselator are coupled and depend on higher order moments—we have an infinite hierarchy of ODEs in our hands which cannot be solved directly and requires approximate treatment. One way of approaching the problem is to apply moment closure approximations (MAs), in which higher order moments are expressed as functions of lower order moments, thus effectively truncating the hierarchy and enabling a numerical solution. A variety of MAs have been proposed in literature and implemented in MomentClosure.jl, see the Theory section on MAs for more details.","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"Let's apply normal closure to the raw moment equations raw_eqs we have generated earlier:","category":"page"},{"location":"tutorials/using_momentclosure/","page":"Using MomentClosure","title":"Using MomentClosure","text":"closed_raw_eqs = moment_closure(raw_eqs, \"normal\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = MomentClosure","category":"page"},{"location":"#MomentClosure","page":"Home","title":"MomentClosure","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MomentClosure.jl is a tool to automatically obtain time-evolution equations of moments up to an arbitrary order for virtually any chemical reaction network implementing a wide array of moment closure approximations commonly used in stochastic biochemical kinetics [1]. MomentClosure is (attempted to be) fairly well-integrated within the broader Julia ecosystem utilising a number of familiar packages:","category":"page"},{"location":"","page":"Home","title":"Home","text":"MomentClosure can be immediately applied to reaction network models defined using Catalyst.\nMoment equations are generated as a ModelingToolkit ODESystem (with some extra help from SymbolicUtils).\nThe resulting ODESystem can be solved using any DifferentialEquations ODE solvers, enabling further study of the system using parameter estimation, sensitivity analysis and bifurcation analysis tools (have no example/test for these yet!).","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Chemical reaction networks containing any number of molecular species and reactions with any type of smooth propensity functions are supported.\nModels can be defined using Catalyst as ModelingToolkit.ReactionSystem. Alternatively, built-in functionality (heavily based on Catalyst) can be used for model initialisation.\nAdded (experimental and limited) support for reaction networks involving reaction products that are geometrically distributed random variables. An example of such network is an autoregulatory gene network with bursty protein production where the burst size follows a geometric distribution. To our knowledge, such models cannot be defined using Catalyst and hence modelled using the broader SciML framework. For this reason, we also include an implementation of the Gillespie's Stochastic Simulation Algorithm [2] generally applicable to such reaction networks (yet to be added).\nEquations describing the time evolution of means and central moments of the number of molecules of each species in the system can be generated up to arbitrary order [3, 4]. Note that non-polynomial propensity functions are Taylor expanded to a specified order. Raw moment equations can also be generated for mass-action systems (where all propensity functions are polynomials).\nCurrently implemented moment closure approximations include:\nzero (central-moment neglect) closure [3, 5]\nnormal closure [5]\npoisson closure [5]\nlog-normal closure [6]\ngamma closure [6]\nderivative matching [7]\nconditional gaussian closure [8]\nconditional derivative matching [8]\nMoment equations are constructed as a ModelingToolkit.ODESystem that can be solved using any DifferentialEquations ODE solver. Moreover, parameter estimation, sensitivity analysis and bifurcation analysis tools can be applied to further study the resulting system of equations.\nLatexify can be used to generate LaTeX expressions of the corresponding moment equations.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MomentClosure can be installed through the Julia package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"]add https://github.com/augustinas1/MomentClosure.jl\nusing MomentClosure","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note the use of full link to github repo as the package is currently unregistered.","category":"page"},{"location":"#Illustrative-example","page":"Home","title":"Illustrative example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To be added","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"[1]: D. Schnoerr, G. Sanguinetti, and R. Grima, \"Approximation and inference methods for stochastic biochemical kinetics - a tutorial review\", Journal of Physics A: Mathematical and Theoretical 50, 093001 (2017). https://doi.org/10.1088/1751-8121/aa54d9","category":"page"},{"location":"","page":"Home","title":"Home","text":"[2]: D. T. Gillespie, \"A general method for numerically simulating the stochastic time evolution of coupled chemical reactions\", Journal of Computational Physics 22, 403-434 (1976). https://doi.org/10.1016/0021-9991(76)90041-3","category":"page"},{"location":"","page":"Home","title":"Home","text":"[3]: A. Ale, P. Kirk, and M. P. H. Stumpf, \"A general moment expansion method for stochastic kinetic models\", The Journal of Chemical Physics 138, 174101 (2013). https://doi.org/10.1063/1.4802475","category":"page"},{"location":"","page":"Home","title":"Home","text":"[4]: C. H. Lee, \"A Moment Closure Method for Stochastic Chemical Reaction Networks with General Kinetics\", MATCH Communications in Mathematical and in Computer Chemistry 70, 785-800 (2013). https://match.pmf.kg.ac.rs/electronicversions/Match70/n3/match70n3785-800.pdf","category":"page"},{"location":"","page":"Home","title":"Home","text":"[5]: D. Schnoerr, G. Sanguinetti, and R. Grima, \"Comparison of different moment-closure approximations for stochastic chemical kinetics\", The Journal of Chemical Physics 143, 185101 (2015). https://doi.org/10.1063/1.4934990","category":"page"},{"location":"","page":"Home","title":"Home","text":"[6]: E. Lakatos, A. Ale, P. D. W. Kirk, and M. P. H. Stumpf, \"Multivariate moment closure techniques for stochastic kinetic models\", The Journal of Chemical Physics 143, 094107 (2015). https://doi.org/10.1063/1.4929837","category":"page"},{"location":"","page":"Home","title":"Home","text":"[7]: A. Singh and J. P. Hespanha, \"Lognormal Moment Closures for Biochemical Reactions\", in Proceedings of the 45th IEEE Conference on Decision and Control, ISSN: 0191-2216 (Dec. 2006), pp. 2063-2068. https://doi.org/10.1109/CDC.2006.376994","category":"page"},{"location":"","page":"Home","title":"Home","text":"[8]: M. Soltani, C. A. Vargas-Garcia, and A. Singh, \"Conditional Moment Closure Schemes for Studying Stochastic Dynamics of Genetic Circuits\", IEEE Transactions on Biomedical Circuits and Systems 9, 518-526 (2015). https://doi.org/10.1109/TBCAS.2015.2453158","category":"page"},{"location":"tutorials/derivative_matching_example/#Derivative-Matching","page":"Derivative Matching","title":"Derivative Matching","text":"","category":"section"},{"location":"api/momentclosure_api/#api","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"","category":"section"},{"location":"api/momentclosure_api/","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"CurrentModule = MomentClosure","category":"page"},{"location":"api/momentclosure_api/#Model-definition","page":"MomentClosure.jl API","title":"Model definition","text":"","category":"section"},{"location":"api/momentclosure_api/","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"MomentClosure is fully compatible with reaction network models defined using Catalyst and stored as a ModelingToolkit.ReactionSystem. Nevertheless, we have implemented a limited extension of ModelingToolkit.ReactionSystem, called ReactionSystemMod, that allows us to consider systems containing reactions whose products can be independent geometrically distributed random variables. For example, such reactions can be encountered in certain models of autoregulatory gene networks. Moreover, ReactionSystemMod provides an alternative to Catalyst as the model is now constructed directly in terms of user-defined reaction propensity functions and the stoichiometric matrix, with system parameters and species defined using ModelingToolkit @parameters and @variables respectively. However, we stress that defining models using Catalyst is preferred whenever possible due to its much richer integration within the broader SciML ecosystem.","category":"page"},{"location":"api/momentclosure_api/","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"ModelingToolkit.@parameters\r\nModelingToolkit.@variables\r\nReactionSystemMod","category":"page"},{"location":"api/momentclosure_api/#ModelingToolkit.@parameters","page":"MomentClosure.jl API","title":"ModelingToolkit.@parameters","text":"Define one or more known variables.\n\n\n\n\n\n","category":"macro"},{"location":"api/momentclosure_api/#MomentClosure.ReactionSystemMod","page":"MomentClosure.jl API","title":"MomentClosure.ReactionSystemMod","text":"struct ReactionSystemMod\n\nA system of chemical reactions. The structure is heavily based on ModelingToolkit.ReactionSystem and the relevant fields are left identical for the sake of familiar users.\n\nFields\n\niv\nIndependent variable (usually time)\nstates\nDependent (state) variables representing amount of each species.\nps\nParameter variables.\na\nPropensity functions of all reactions\nS\nStoichiometric matrix\n\nExample\n\n@parameters t, c₁, c₂, c₃, c₄, Ω\n@variables X(t), Y(t)\n\n# stoichiometric matrix\nS_mat = [ 1 -1  1 -1;\n         -1  1  0  0]\n\n# propensity functions\na = [c₁*X*Y*(X-1)/Ω^2, c₂*X, c₃*Ω, c₄*X]\n\nrn = ReactionSystemMod(t, [X, Y], [c₁, c₂, c₃, c₄, Ω], a, S_mat)\n\n\n\n\n\n","category":"type"},{"location":"api/momentclosure_api/#Basic-model-properties","page":"MomentClosure.jl API","title":"Basic model properties","text":"","category":"section"},{"location":"api/momentclosure_api/","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"To keep the API consistent with Catalyst, we provide a number of identical basic functions allowing easy access to network properties:","category":"page"},{"location":"api/momentclosure_api/","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"species\r\nspeciesmap\r\nparams\r\nparamsmap\r\nnumspecies\r\nnumparams\r\nnumreactions","category":"page"},{"location":"api/momentclosure_api/#Catalyst.species","page":"MomentClosure.jl API","title":"Catalyst.species","text":"species(rn::ReactionSystemMod)\n\nGiven a ReactionSystemMod, return a vector of species variables expressed as Term{Real}. Extension of Catalyst's species used with a ReactionSystem.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#Catalyst.speciesmap","page":"MomentClosure.jl API","title":"Catalyst.speciesmap","text":"speciesmap(rn::ReactionSystemMod)\n\nGiven a ReactionSystemMod, return a Dictionary mapping from species to species indices. Extension of Catalyst's speciesmap used with a ReactionSystem.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#Catalyst.params","page":"MomentClosure.jl API","title":"Catalyst.params","text":"params(rn::ReactionSystemMod)\n\nGiven a ReactionSystemMod, return a vector of parameter variables expressed as Sym{ModelingToolkit.Parameter{Real}. Extension of  Catalyst's params used with a ReactionSystem.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#Catalyst.paramsmap","page":"MomentClosure.jl API","title":"Catalyst.paramsmap","text":"paramsmap(rn::ReactionSystemMod)\n\nGiven a ReactionSystemMod, return a Dictionary mapping from parameters to parameter indices.  Extension of Catalyst's paramsmap used with a ReactionSystem.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#Catalyst.numspecies","page":"MomentClosure.jl API","title":"Catalyst.numspecies","text":"numspecies(rn::ReactionSystemMod)\n\nReturn the number of species within the given ReactionSystemMod. Extension of Catalyst's numspecies used with a ReactionSystem.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#Catalyst.numparams","page":"MomentClosure.jl API","title":"Catalyst.numparams","text":"numparams(rn::ReactionSystemMod)\n\nReturn the number of parameters within the given ReactionSystemMod. Extension of Catalyst's numparams used with a ReactionSystem.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#Catalyst.numreactions","page":"MomentClosure.jl API","title":"Catalyst.numreactions","text":"numreactions(rn::ReactionSystemMod)\n\nReturn the number of reactions within the given ReactionSystemMod. Extension of Catalyst's numreactions used with a ReactionSystem.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"Moreover, we include two slight extensions of the Catalyst API:","category":"page"},{"location":"api/momentclosure_api/","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"get_S_mat\r\npropensities","category":"page"},{"location":"api/momentclosure_api/#MomentClosure.get_S_mat","page":"MomentClosure.jl API","title":"MomentClosure.get_S_mat","text":"get_S_mat(rn::Union{ReactionSystem, ReactionSystemMod})\n\nReturn the (net) stoichiometric matrix of the given ReactionSystem or ReactionSystemMod.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#MomentClosure.propensities","page":"MomentClosure.jl API","title":"MomentClosure.propensities","text":"propensities(rn::Union{ReactionSystem, ReactionSystemMod}; combinatoric_ratelaw=true)\n\nReturn a vector of propensity functions of all reactions in the given ReactionSystem or ReactionSystemMod.\n\nNotes:\n\ncombinatoric_ratelaw=true uses binomials in calculating the propensity functions of a ReactionSystem, see the notes for ModelingToolkit.jumpratelaw. Note that this field is irrelevant using ReactionSystemMod as then the propensities are defined directly by the user.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#Moment-Equations","page":"MomentClosure.jl API","title":"Moment Equations","text":"","category":"section"},{"location":"api/momentclosure_api/","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"generate_raw_moment_eqs\r\nRawMomentEquations\r\ngenerate_central_moment_eqs\r\nCentralMomentEquations","category":"page"},{"location":"api/momentclosure_api/#MomentClosure.generate_raw_moment_eqs","page":"MomentClosure.jl API","title":"MomentClosure.generate_raw_moment_eqs","text":"generate_raw_moment_eqs(rn::Union{ReactionSystem, ReactionSystemMod}, m_order::Int; combinatoric_ratelaw = true)\n\nGiven a ReactionSystem or ReactionSystemMod, return the RawMomentEquations of the system generated up to m_order.\n\nNotes:\n\nThe expansion order q, denoted by q_order throughout the docs, is automatically determined from the given polynomial form of the propensity functions, see the tutorial and the theory section for more details on how q_order is obtained.\ncombinatoric_ratelaw=true uses binomials in calculating the propensity functions of a ReactionSystem, see the notes for ModelingToolkit.jumpratelaw. Note that this field is irrelevant using ReactionSystemMod as then the propensities are defined directly by the user.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#MomentClosure.RawMomentEquations","page":"MomentClosure.jl API","title":"MomentClosure.RawMomentEquations","text":"struct RawMomentEquations <: MomentClosure.MomentEquations\n\nRaw moment equations generated for the given system plus a number of helper parameters (important for internal functionality).\n\nFields\n\nodes\nModelingToolkit.ODESystem containing the time-evolution equations of raw moments.\nμ\nSymbolic variables defining the raw moments.\nN\nNumber of species within the system.\nm_order\nOrder of moment equations.\nq_order\nExpansion order.\niter_all\nVector of all index combinations (Tuples) up to q_order.\niter_m\nVector of all index combinations (Tuples) up to m_order.\niter_q\nVector of all index combinations (Tuples) of order greater than m_order up to q_order.\niter_1\nVector of index combinations (Tuples)of order 1.\n\n\n\n\n\n","category":"type"},{"location":"api/momentclosure_api/#MomentClosure.generate_central_moment_eqs","page":"MomentClosure.jl API","title":"MomentClosure.generate_central_moment_eqs","text":"generate_central_moment_eqs(rn::Union{ReactionSystem, ReactionSystemMod}, m_order::Int, q_order=nothing; combinatoric_ratelaw = true)\n\nGiven a ReactionSystem or ReactionSystemMod, return the CentralMomentEquations of the system generated up to m_order.\n\nNotes:\n\nif q_order is not specified by the user, it is assumed that the reaction network contains only polynomial propensity functions and hence q_order is determined automatically as in generate_raw_moment_eqs. However, q_order must be specified if non-polynomial propensities are included. Note that the expansion order q denotes the highest order of central moments which will be included in the ODEs (due to the Taylor expansion of propensity functions).\ncombinatoric_ratelaw=true uses binomials in calculating the propensity functions of a ReactionSystem, see the notes for ModelingToolkit.jumpratelaw. Note that this field is irrelevant using ReactionSystemMod as then the propensities are defined directly by the user.\n\n\n\n\n\n","category":"function"},{"location":"api/momentclosure_api/#MomentClosure.CentralMomentEquations","page":"MomentClosure.jl API","title":"MomentClosure.CentralMomentEquations","text":"struct CentralMomentEquations <: MomentClosure.MomentEquations\n\nCentral moment equations generated for the given system plus a number of helper parameters (important for internal functionality).\n\nFields\n\nodes\nMoment ODEs describing the evolution of central moments.\nμ\nSymbolic variables defining the means.\nM\nSymbolic variables defining the central moments.\nN\nNumber of species within the system.\nm_order\nOrder of moment equations.\nq_order\nExpansion order.\niter_all\nVector of all index combinations up to q_order.\niter_m\nVector of all index combinations up to m_order.\niter_q\nVector of all index combinations of order greater than m_order up to q_order.\niter_1\nVector of index combinations of order 1.\n\n\n\n\n\n","category":"type"},{"location":"api/momentclosure_api/#Moment-Closure","page":"MomentClosure.jl API","title":"Moment Closure","text":"","category":"section"},{"location":"api/momentclosure_api/#Displaying-equations-and-closures","page":"MomentClosure.jl API","title":"Displaying equations and closures","text":"","category":"section"},{"location":"api/momentclosure_api/","page":"MomentClosure.jl API","title":"MomentClosure.jl API","text":"format_moment_eqs\r\nformat_closure","category":"page"},{"location":"api/momentclosure_api/#MomentClosure.format_moment_eqs","page":"MomentClosure.jl API","title":"MomentClosure.format_moment_eqs","text":"format_moment_eqs(odes::ODESystem)\n\nGiven a ModelingToolkit.ODESystem containing the moment equations, return an array of formatted strings representing the ODEs that can be visualised using Latexify. Although Latexify can be applied directly on the ODESystem, format_moment_eqs makes it visually more appealing: simplifies the symbolic expressions further (expanding all terms), makes the time-dependence of all moment variables implicit (removes all (t)) and removes all trailing zeros (2.0 → 2).\n\n\n\n\n\n","category":"function"}]
}
